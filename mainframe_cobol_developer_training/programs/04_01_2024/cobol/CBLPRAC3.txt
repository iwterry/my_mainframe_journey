       ID DIVISION.
       PROGRAM-ID. CBLPRAC3.

      ************************ DESCRIPTION ******************** 
      *    - THIS COBOL PROGRAM IS USED TO PRACTICE LOOKUP LOGIC
      *      WITH TWO INPUT PS DATA FILES.
      *********************************************************

       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT FILE1 ASSIGN TO DDFILE1
           ORGANIZATION IS SEQUENTIAL
           ACCESS MODE IS SEQUENTIAL
           FILE STATUS IS WS-FILE1-STATUS.

           SELECT FILE2 ASSIGN TO DDFILE2
           ORGANIZATION IS SEQUENTIAL
           ACCESS MODE IS SEQUENTIAL
           FILE STATUS IS WS-FILE2-STATUS.

           SELECT FILE3 ASSIGN TO DDFILE3
           ORGANIZATION IS SEQUENTIAL
           ACCESS MODE IS SEQUENTIAL
           FILE STATUS IS WS-FILE3-STATUS.

       DATA DIVISION.
       FILE SECTION.
       FD FILE1 LABEL RECORD IS STANDARD.
       COPY FILE1CPY
         REPLACING FILE1-REC-LAYOUT BY FILE1-REC-LAYOUT-IN.

       FD FILE2 LABEL RECORD IS STANDARD.
       COPY FILE2CPY
         REPLACING FILE2-REC-LAYOUT BY FILE2-REC-LAYOUT-IN.

       FD FILE3 LABEL RECORD IS STANDARD.
       COPY FILE3CPY
         REPLACING FILE3-REC-LAYOUT BY FILE3-REC-LAYOUT-OUT.

       WORKING-STORAGE SECTION.
       01 WS-FILE1-STATUS PIC X(02).
       01 WS-FILE2-STATUS PIC X(02).
       01 WS-FILE3-STATUS PIC X(02).

       01 WS-NUM-INPUT-RECS PIC 9(02).
       01 WS-NUM-OUTPUT-RECS PIC 9(02).

       01 WS-ARE-MORE-RECS-FILE1 PIC X(01).
       01 WS-ARE-MORE-RECS-FILE2 PIC X(01).

       01 WS-ABENDPGM PIC X(08) VALUE 'ABENDPGM'.

       01 WS-NUM-RECS-EXISTS-FILE1 PIC 9(02) VALUE 0.
       01 WS-LOOKUP-GROUP.
           03 WS-FILE1-LOOKUP-TABLE OCCURS 1 TO 99 TIMES
              DEPENDING ON WS-NUM-RECS-EXISTS-FILE1
              ASCENDING KEY IS WS-PERSON-ID
              INDEXED BY INDX.
             05 WS-PERSON-ID PIC X(02).
             05 WS-PERSON-NAME PIC X(15).

       01 WS-I PIC 9(02) VALUE ZERO.

       LINKAGE SECTION.

       PROCEDURE DIVISION.
       000-MAIN-PARA.
           DISPLAY 'CBLPRAC3 STARTED'.

           PERFORM 100-INIT-PARA THRU 100-EXIT-PARA.
           CLOSE FILE1.
           PERFORM 200-GET-REC-PARA THRU 200-EXIT-PARA.
           PERFORM 300-PROCESS-PARA THRU 300-EXIT-PARA
             UNTIL WS-ARE-MORE-RECS-FILE2 = 'N'.

           CLOSE FILE2 FILE3.

           DISPLAY 'NUM INPUT RECORDS: ' WS-NUM-INPUT-RECS.
           DISPLAY 'NUM OUTPUT RECORDS: ' WS-NUM-OUTPUT-RECS.

           STOP RUN.


       100-INIT-PARA.
           MOVE 'Y' TO WS-ARE-MORE-RECS-FILE1
                       WS-ARE-MORE-RECS-FILE2.
           MOVE ZERO TO WS-NUM-INPUT-RECS
                        WS-NUM-OUTPUT-RECS.
           MOVE SPACE TO WS-FILE1-STATUS
                         WS-FILE2-STATUS
                         WS-FILE3-STATUS.

           OPEN INPUT FILE1 FILE2.
           OPEN OUTPUT FILE3.
           IF WS-FILE1-STATUS NOT = '00' OR
              WS-FILE2-STATUS NOT = '00' OR
              WS-FILE3-STATUS NOT = '00'

             DISPLAY 'ERROR IN 100-INIT-PARA'
             DISPLAY 'ERROR OPENING FILE(S)'
             DISPLAY 'FILE1 STATUS: ' WS-FILE1-STATUS
             DISPLAY 'FILE2 STATUS: ' WS-FILE2-STATUS
             DISPLAY 'FILE3 STATUS: ' WS-FILE3-STATUS
             CALL WS-ABENDPGM
           END-IF.

           INITIALIZE FILE1-REC-LAYOUT-IN
                      FILE2-REC-LAYOUT-IN
                      FILE3-REC-LAYOUT-OUT.

           PERFORM 110-BUILD-LOOKUP-TABLE-PARA THRU 110-EXIT-PARA.

       100-EXIT-PARA. EXIT.


       110-BUILD-LOOKUP-TABLE-PARA.
           PERFORM VARYING WS-I FROM 1 BY 1
             UNTIL WS-ARE-MORE-RECS-FILE1 = 'N'

             READ FILE1
               AT END
                 MOVE 'N' TO WS-ARE-MORE-RECS-FILE1
               NOT AT END
                 MOVE WS-I TO WS-NUM-RECS-EXISTS-FILE1

                 MOVE PERSON-ID OF FILE1-REC-LAYOUT-IN
                   TO WS-PERSON-ID(WS-I)
                 MOVE PERSON-NAME OF FILE1-REC-LAYOUT-IN
                   TO WS-PERSON-NAME(WS-I)
             END-READ
           END-PERFORM.

       110-EXIT-PARA. EXIT.


       200-GET-REC-PARA.
           READ FILE2
             AT END
               MOVE 'N' TO WS-ARE-MORE-RECS-FILE2
               GO TO 200-EXIT-PARA
           END-READ.

           ADD 1 TO WS-NUM-INPUT-RECS.

       200-EXIT-PARA. EXIT.


       300-PROCESS-PARA.
      *    - FOR PRACTICE, I WORKED WITH BOTH SEARCH STATEMENT AND 
      *      SEARCH ALL STATEMENT. I CHOSE TO GO WITH SEARCH ALL
      *      STATEMENT. TO GO WITH SEARCH STATEMENT, JUST COMMENT
      *      OUT THE SEARCH ALL STATEMENT AND UNCOMMENT THE PART
      *      FOR THE SEARCH STATEMENT.

      ********************** SEARCH STATEMENT ********************* 
      *    SET INDX TO 1.
      *    SEARCH WS-FILE1-LOOKUP-TABLE VARYING INDX
      *      AT END
      *        DISPLAY 'ERROR IN 300-PROCESS-PARA'
      *        DISPLAY 'RECORD WITH GIVEN PERSON-ID NOT FOUND IN FILE1'
      *        DISPLAY 'PERSON-ID: ' PERSON-ID OF FILE2-REC-LAYOUT-IN
      *        CALL WS-ABENDPGM
      *      WHEN WS-PERSON-ID(INDX) = PERSON-ID OF FILE2-REC-LAYOUT-IN
      *        PERFORM 310-MOVE-TO-FILE3-LAYOUT-PARA
      *         THRU 310-EXIT-PARA
      *        PERFORM 320-WRITE-FILE3-LAYOUT-PARA
      *         THRU 320-EXIT-PARA
      *    END-SEARCH.
      ******************** END OF SEARCH STATEMENT ****************
      ********************* SEARCH ALL STATEMENT *****************
           SEARCH ALL WS-FILE1-LOOKUP-TABLE
             AT END
               DISPLAY 'ERROR IN 300-PROCESS-PARA'
               DISPLAY 'RECORD WITH GIVEN PERSON-ID NOT FOUND IN FILE1'
               DISPLAY 'PERSON-ID: ' PERSON-ID OF FILE2-REC-LAYOUT-IN
               CALL WS-ABENDPGM
             WHEN WS-PERSON-ID(INDX) = PERSON-ID OF FILE2-REC-LAYOUT-IN
               PERFORM 310-MOVE-TO-FILE3-LAYOUT-PARA
                THRU 310-EXIT-PARA
               PERFORM 320-WRITE-FILE3-LAYOUT-PARA
                THRU 320-EXIT-PARA
           END-SEARCH.
      **************** END OF SEARCH ALL STATEMENT *********************
           PERFORM 200-GET-REC-PARA THRU 200-EXIT-PARA.

       300-EXIT-PARA. EXIT.


       310-MOVE-TO-FILE3-LAYOUT-PARA.
           MOVE WS-PERSON-ID(INDX)
             TO PERSON-ID OF FILE3-REC-LAYOUT-OUT.

           MOVE WS-PERSON-NAME(INDX)
             TO PERSON-NAME OF FILE3-REC-LAYOUT-OUT.

            MOVE CITY-ID OF FILE2-REC-LAYOUT-IN
             TO CITY-ID IN FILE3-REC-LAYOUT-OUT.

           MOVE CITY-NAME OF FILE2-REC-LAYOUT-IN
             TO CITY-NAME IN FILE3-REC-LAYOUT-OUT.

           MOVE STATE-NAME OF FILE2-REC-LAYOUT-IN
             TO STATE-NAME IN FILE3-REC-LAYOUT-OUT.

       310-EXIT-PARA. EXIT.


       320-WRITE-FILE3-LAYOUT-PARA.
           WRITE FILE3-REC-LAYOUT-OUT.
           IF WS-FILE3-STATUS NOT = '00'
             DISPLAY 'ERROR IN 320-WRITE-FILE3-LAYOUT-PARA'
             DISPLAY 'ERROR WRITING TO FILE3'
             DISPLAY 'PERSON-ID: ' PERSON-ID OF FILE1-REC-LAYOUT-IN
             DISPLAY 'CITY-ID: ' CITY-ID OF FILE2-REC-LAYOUT-IN
             DISPLAY 'FILE STATUS: ' WS-FILE3-STATUS
             CALL WS-ABENDPGM
           END-IF.

           ADD 1 TO WS-NUM-OUTPUT-RECS.

       320-EXIT-PARA. EXIT.
